# Generated by Django 3.2.9 on 2022-06-14 04:57

from django.db import migrations
from api.models import VectorWord

import numpy as np
from tqdm import tqdm

#function and var definitions
nWords = 0
vecSize = 0
# embeddings = {}



from enum import Enum
class KeyType(Enum):
    INVALID = 1
    HASHTAG = 2
    VALID = 0

def isValidKey(key): 
    if len(key) == 0:
        return KeyType.INVALID
    elif key[0] == '#':
        return KeyType.HASHTAG
    for char in key:
        if ord(char) <= 128:
            return KeyType.INVALID
    else:
        return KeyType.VALID

# read data into dict
def populate_db(apps, schema_editor):
    Word = apps.get_model('api', 'VectorWord')

    with open('/Users/bigsad/Downloads/jawiki.all_vectors.300d.txt') as f:
    # with open('test dataset.txt') as f:
        line = f.readline()
        nWords, vecSize = line.split(' ')
        # nWords = int(nWords)
        nWords = 100000
        vecSize = int(vecSize)
        with tqdm(total=nWords) as pbar:
            count = 1
            while line:
                line = f.readline()
                line = line[:-1] # remove newline
                arr = line.split(' ')

                # first element is the japanese word and the rest are the vector values
                key = arr[0] 
                if isValidKey(key) == KeyType.INVALID:
                    pass
                elif isValidKey(key) == KeyType.HASHTAG:
                    key = key[2:-2]
                
                vec = arr[1:]
                vw = VectorWord(word_text=key, word_vec=vec)
                vw.save()
                # embeddings[key] = vec
                
                if count == nWords:
                    break
                count += 1
                pbar.update(1)


    #clean up other miscel characters
    # del embeddings['']
    # del embeddings['、']
    # del embeddings['。']
    # del embeddings['（']
    # del embeddings['）']
    # del embeddings['「']
    # del embeddings['」']
    # del embeddings['・']

class Migration(migrations.Migration):

    dependencies = [
        ('api', '0004_vectorword'),
    ]

    operations = [
        migrations.RunPython(populate_db),
    ]
